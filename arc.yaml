app: arcs
desc: "Arc is a simple utility to author, view, inspect and update software architecture design"
users:
  - name: dev
    role: "one who create software service"
  - name: product
    role: "one who design product"
  - name: ops
    role: "one who run software service"
  - name: sec
    role: "one who secure software service"

internal-systems:
  - name: arc
    desc: |
      Enable deloper to author, inspect and version control software systems design and code. 
  
    containers:
    - name: arcli
      runtime: arcli-binary
      technology: golang
      desc: "local utility to parse and build arc data to and from visualizations"
  
    - name: gui
      runtime: browser
      technology: javascript-spa 
      desc: "Web base user interface to author and inspect software architecture design"
    
    - name: arcviz
      runtime: docker-java
      technology: gRPC service, plantuml
      desc: "render visualization of archtecture design given a arc data blob specifications"
 
  - name: arc-intel
    desc: |
     Hosted service enabling integration with other Ci/Cd to auto verify software system 
     implementation versus design as well as maintain overall system architecture knowledge repository

    containers: 
    - name: api
      runtime: alpine-docker 
      technology: golang-graphql
      desc: "api servers that enable webhooks to other ci/cd toolchain to inspect and update design models"
      components:
       - name: inpsector
         desc: "inspect the stored software design model"
         code-path: "./api"
       - name: update
         desc: "create or update software design information"
         code-path: "./api"
         
    - name: db
      runtime: database
      technology: dgraph
      desc: "graph database that store the software design models and dependency paths"

    - name: index
      runtime: docker-golang
      technology: "golang-https://github.com/kazukousen/gouml"
      desc: "inspect and index a source repository to auto generate code level architecture diagrams"

external-systems:
  - name: git-server
    desc: "source version control"
  - name: build-service
    desc: "integration runner that build, test, release software"
  - name: deploy-service
    desc: "deployment infrastructure and service that provision the software runtime to production"
  - name: dev-ide
    desc: "software developement editor and integrated environment"

relations:
#Usecases:
  - {s: dev,p: design and develop software,o: arc}
  - {s: product,p: view system design,o: arc.gui}
  - {s: ops,p: inspect containers layout,o: arc.gui}
  - {s: dev,p: author containers design,o: arc.gui}
  - {s: sec,p: inspect defendable quality of system,o: arc-intel}

#Modular dependency:
  # - {s: arc.arcli,p: serve to local browser,o: arc.gui}
  - {s: arc.arcli,p: call (https:restful),o: arc-intel.api.update}
  # - {s: arc.arcli,p: download new project template from,o: git-server}
  # - {s: arc.arcli,p: call (gRPC),o: arc.arcviz}
  # - {s: arc.arcviz,p: persist arc graph (https:restful),o: arc-intel.api}
  # - {s: arc.gui,p: call (https:restful),o: arc-intel.api.inspector}

# #Extern integrations:
  - {s: dev-ide,p: integrate (pluggin),o: arc.arcli}
  - {s: build-service,p: update system model,o: arc-intel.api.update}
  - {s: deploy-service,p: verify deployment design,o: arc-intel}
  - {s: arc-intel.index,p:  pull source from,o: git-server}
  - {s: arc-intel.api,p: persist data,o: arc-intel.db}